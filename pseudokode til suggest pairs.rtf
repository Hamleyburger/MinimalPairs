{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;\red202\green202\blue202;
\red23\green23\blue23;\red89\green138\blue67;\red20\green0\blue65;}
{\*\expandedcolortbl;;\cssrgb\c13333\c13333\c13333;\cssrgb\c100000\c100000\c100000;\cssrgb\c83137\c83137\c83137;
\cssrgb\c11765\c11765\c11765;\cssrgb\c41569\c60000\c33333;\cssrgb\c10369\c3853\c32394;}
\paperw11900\paperh16840\margl1440\margr1440\vieww18800\viewh10880\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
\
\pard\pardeftab720\sl260\partightenfactor0

\f1\fs22 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 data-option-array-index\cb3 ="\cb1 4\cb3 " refererer til det index, som det valgte ord har i pairForm.pairs.choices.\
\
med eventlistener p\'e5 li element med class .active-result AJAX kan vi sende dens data-option-array-index\
\
pairForm.pair.choices er en list [] med tuples, der kan gemmes i session\
\
ajax url funktionen i view skal vide, hvilken liste af choices der var, da brugeren trykkede p\'e5 et choice og resten kan den selv finde ud af.\
\
\
\
\pard\pardeftab720\sl360\partightenfactor0

\fs24 \cf4 \cb5 \strokec4     \cf6 \strokec6 # selected_indexes =\cf4 \cb1 \strokec4 \
\cb5     \cf6 \strokec6 # selected_wordids = []\cf4 \cb1 \strokec4 \
\cb5     \cf6 \strokec6 # choice-tuples = session["pair_choices"] (remember to declare these in each add function)\cf4 \cb1 \strokec4 \
\cb5     \cf6 \strokec6 # (get words from session list of tuples. list item [i] will have a word id as key)\cf4 \cb1 \strokec4 \
\cb5     \cf6 \strokec6 # for i, index in enumerate(selected_indexes):\cf4 \cb1 \strokec4 \
\cb5     \cf6 \strokec6 #   word_id =  choice-tuples("i").key or something like that\cf4 \cb1 \strokec4 \
\cb5     \cf6 \strokec6 #   selected_wordids.append(word_id)\cf4 \cb1 \strokec4 \
\cb5     \cf6 \strokec6 # query database for all words with the ids in selected_wordids\cf4 \cb1 \strokec4 \
\cb5     \cf6 \strokec6 # get groups based on these word: if a group contains two or more of selected words, add to list and return group\cf4 \cb1 \strokec4 \
\cb5     \cf6 \strokec6 # either write a list of words at bottom of page or:\cf4 \cb1 \strokec4 \
\cb5     \cf6 \strokec6 # based on ids of all the group words, find out what indexes these words have in choice-tuples\cf4 \cb1 \strokec4 \
\cb5     \cf6 \strokec6 # make suggested_choice_indexes[]\cf4 \cb1 \strokec4 \
\cb5     \cf6 \strokec6 # with ajax find the element with that index and make it bold and coloured.\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \
find grupper baseret p\'e5 ord:\
\
det er forudsat, at det kun tjekkes, hvis der er minimum to ord.\
\
Vi har en liste af ord.\
\
Find alle grupper relevante for disse ord og lav tjekke_grupper\
Hvis en gruppe har to eller flere ord i, s\'e6t den p\'e5 return_grupper.\
\
find alle ord ids i ord i return-grupper\
\
returner ord-ids\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}